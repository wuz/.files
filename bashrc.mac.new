# If not running interactively, don't do anything
case $- in
*i*) ;;
*) return ;;
esac

# don't put duplicate lines or lines starting with space in the history.  See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=10000
HISTFILESIZE=20000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

export TERM=xterm-256color

[ -n "$PS1" ] && . ~/.bash_prompt

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

export FZF_DEFAULT_OPTS='
--color=bg+:#292e46,bg:#292e46,spinner:#eff0f6,hl:#eff0f6
--color=fg:#eff0f6,header:#eff0f6,info:#66d9ef,pointer:#f92672
--color=marker:#f92672,fg+:#a5abca,prompt:#77dcb8,hl+:#f92672
'

export EDITOR="vim"

# man colors
export MANROFFOPT='-c'
export LESS_TERMCAP_mb=$(
  tput bold
  tput setaf 2
)
export LESS_TERMCAP_md=$(
  tput bold
  tput setaf 6
)
export LESS_TERMCAP_me=$(tput sgr0)
export LESS_TERMCAP_so=$(
  tput bold
  tput setaf 3
  tput setab 4
)
export LESS_TERMCAP_se=$(
  tput rmso
  tput sgr0
)
export LESS_TERMCAP_us=$(
  tput smul
  tput bold
  tput setaf 7
)
export LESS_TERMCAP_ue=$(
  tput rmul
  tput sgr0
)
export LESS_TERMCAP_mr=$(tput rev)
export LESS_TERMCAP_mh=$(tput dim)

eval "$(hub alias -s)"
eval "$(thefuck --alias feck)"

source ~/.aliases

# Autocorrect typos in path names when using `cd`
shopt -s cdspell

# Enable some Bash 4 features when possible:
# * `autocd`, e.g. `**/qux` will enter `./foo/bar/baz/qux`
# * Recursive globbing, e.g. `echo **/*.txt`
for option in autocd globstar; do
  shopt -s "$option" 2>/dev/null
done

if [ -f /usr/local/share/bash-completion/bash_completion ]; then
  . /usr/local/share/bash-completion/bash_completion
fi

# Add tab completion for SSH hostnames based on ~/.ssh/config, ignoring wildcards
[ -e "$HOME/.ssh/config" ] && complete -o "default" -o "nospace" -W "$(grep "^Host" ~/.ssh/config | grep -v "[?*]" | cut -d " " -f2- | tr ' ' '\n')" scp sftp ssh

# export base node install, before settting up other nvm stuff
export PATH="$PATH:/Users/wuz/.nvm/versions/node/v11.0.0/bin"

export NVM_DIR="$HOME/.nvm"
[[ -r $NVM_DIR/bash_completion ]] && \. $NVM_DIR/bash_completion
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

export PATH="$PATH:$HOME/.cargo/bin"
export PATH="$PATH:/usr/local/sbin"
export PATH="$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"
export PATH="$PATH:$HOME/bin"
export PATH="$PATH:$HOME/.local/bin"
export PATH="$PATH:/usr/local/opt/postgresql@9.6/bin"

# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[ -f /Users/wuz/.nvm/versions/node/v11.0.0/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.bash ] && . /Users/wuz/.nvm/versions/node/v11.0.0/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.bash
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
[ -f /Users/wuz/.nvm/versions/node/v11.0.0/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.bash ] && . /Users/wuz/.nvm/versions/node/v11.0.0/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.bash

# tabtab source for yarn package
# uninstall by removing these lines or running `tabtab uninstall yarn`
[ -f /Users/wuz/.config/yarn/global/node_modules/yarn-completions/node_modules/tabtab/.completions/yarn.bash ] && . /Users/wuz/.config/yarn/global/node_modules/yarn-completions/node_modules/tabtab/.completions/yarn.bash

. $HOME/.asdf/asdf.sh
. $HOME/.asdf/completions/asdf.bash
export PATH="/usr/local/opt/curl/bin:$PATH"

[ -f ~/.fzf.bash ] && source ~/.fzf.bash
export PATH="/usr/local/opt/libpq/bin:$PATH"
export PATH="/Users/wuz/Library/Python/2.7/bin:$PATH"
export PATH="/Users/wuz/pear/bin:$PATH"
export PATH="/Users/wuz/.deno/bin:$PATH"

export LDFLAGS="-L/usr/local/opt/readline/lib"
export CPPFLAGS="-I/usr/local/opt/readline/include"

export GOPATH=$HOME/go
